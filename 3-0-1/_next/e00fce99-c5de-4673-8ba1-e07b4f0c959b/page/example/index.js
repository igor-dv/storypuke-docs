
          window.__NEXT_REGISTER_PAGE('/example', function() {
            var comp = module.exports=webpackJsonp([11],{455:function(n,a,s){n.exports=s(456)},456:function(n,a,s){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(a,"__esModule",{value:!0});var e=s(0),o=t(e),p=s(18),l=t(p),c=s(19),u=t(c),r=s(31),i=s(15),k=function(n){if(n&&n.__esModule)return n;var a={};if(null!=n)for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(a[s]=n[s]);return a.default=n,a}(i),d=o.default.createElement("div",null,o.default.createElement("h1",{id:"core-addon-api","aria-level":1,title:"Core Addon API"},"Core Addon API"),o.default.createElement("p",null,"This is the core addon API. This is how to get the addon API:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'<span class="token keyword">import</span> addonAPI <span class="token keyword">from</span> <span class="token string">\'@storybook/addons\'</span><span class="token punctuation">;</span><br />'}),o.default.createElement("p",null,"Have a look at the API methods for more details:"),o.default.createElement("h2",{id:"addonapigetchannel","aria-level":2,title:"addonAPI.getChannel()"},"addonAPI.getChannel()"),o.default.createElement("p",null,"Get an instance to the channel where you can communicate with the manager and the preview. You can find this in both the addon register code and in your addonâ€™s wrapper component (where used inside a story)."),o.default.createElement("p",null,"It has a NodeJS ",o.default.createElement("a",{title:null,href:"https://nodejs.org/api/events.html"},"EventEmitter")," compatible API. So, you can use it to emit events and listen for events."),o.default.createElement("h2",{id:"addonapiregister","aria-level":2,title:"addonAPI.register()"},"addonAPI.register()"),o.default.createElement("p",null,"This method allows you to register an addon and get the storybook API. You can do this only in the Manager App."),o.default.createElement("p",null,"See how we can use this:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'<span class="token keyword">import</span> addonAPI <span class="token keyword">from</span> <span class="token string">\'@storybook/addons\'</span><span class="token punctuation">;</span><br /><br /><span class="token comment" spellcheck="true">// Register the addon with a unique name.</span><br />addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  <span class="token comment" spellcheck="true">// do something!</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("p",null,"Now you'll get an instance to our StorybookAPI. See the ",o.default.createElement("a",{title:null,href:"/addons/api#storybook-api"},"api docs")," for Storybook API regarding using that."),o.default.createElement("h2",{id:"addonapiaddpanel","aria-level":2,title:"addonAPI.addPanel()"},"addonAPI.addPanel()"),o.default.createElement("p",null,"This method allows you to add a panel to Storybook. (Storybook's Action Logger is a panel). You can do this only in the Manager App. See how you can use this method:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'<span class="token keyword">import</span> addonAPI <span class="token keyword">from</span> <span class="token string">\'@storybook/addons\'</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">const</span> MyPanel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>This is a panel<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><br /><br /><span class="token comment" spellcheck="true">// give a unique name for the panel</span><br />addonAPI<span class="token punctuation">.</span><span class="token function">addPanel</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon/panel\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />  title<span class="token punctuation">:</span> <span class="token string">\'My Addon\'</span><span class="token punctuation">,</span><br />  render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyPanel</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("p",null,"As you can see, you can set any React Component as the panel. Currently, it's just a text. But you can do anything you want. You should specify the panel title. It could be a plain text or a function returning any React Component."),o.default.createElement("p",null,"You also pass the channel and the Storybook API into that. See:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'<span class="token keyword">import</span> addonAPI <span class="token keyword">from</span> <span class="token string">\'@storybook/addons\'</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">import</span> Notes <span class="token keyword">from</span> <span class="token string">\'./notes\'</span><span class="token punctuation">;</span><br /><br />addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  <span class="token comment" spellcheck="true">// Also need to set a unique name to the panel.</span><br />  addonAPI<span class="token punctuation">.</span><span class="token function">addPanel</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon/panel\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />    title<span class="token punctuation">:</span> <span class="token string">\'Notes\'</span><span class="token punctuation">,</span><br />    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Notes</span> <span class="token attr-name">channel</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>addonAPI<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">api</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>storybookAPI<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("h1",{id:"storybook-api","aria-level":1,title:"Storybook API"},"Storybook API"),o.default.createElement("p",null,"Storybook API allows you to access different functionalities of Storybook UI. You can move an instance to the Storybook API when you register an addon."),o.default.createElement("p",null,"Let's have a look at API methods."),o.default.createElement("h2",{id:"storybookapiselectstory","aria-level":2,title:"storybookAPI.selectStory()"},"storybookAPI.selectStory()"),o.default.createElement("p",null,"With this method, you can select a story via an API. This method accepts two parameters."),o.default.createElement("ol",null,o.default.createElement("li",null,o.default.createElement("p",null,"story kind name")),o.default.createElement("li",null,o.default.createElement("p",null,"story name (optional)"))),o.default.createElement("p",null,"Let's say you've got a story like this:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> storiesOf <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@storybook/react\'</span><span class="token punctuation">;</span><br /><br /><span class="token function">storiesOf</span><span class="token punctuation">(</span><span class="token string">\'heading\'</span><span class="token punctuation">,</span> module<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">\'with text\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("p",null,"This is how you can select the above story:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  storybookAPI<span class="token punctuation">.</span><span class="token function">selectStory</span><span class="token punctuation">(</span><span class="token string">\'heading\'</span><span class="token punctuation">,</span> <span class="token string">\'with text\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("h2",{id:"storybookapisetqueryparams","aria-level":2,title:"storybookAPI.setQueryParams()"},"storybookAPI.setQueryParams()"),o.default.createElement("p",null,"This method allows you to set query string parameters. You can use that as temporary storage for addons. Here's how you set query params."),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  storybookAPI<span class="token punctuation">.</span><span class="token function">setQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />    abc<span class="token punctuation">:</span> <span class="token string">\'this is abc\'</span><span class="token punctuation">,</span><br />    bbc<span class="token punctuation">:</span> <span class="token string">\'this is bbc\'</span><span class="token punctuation">,</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("blockquote",null,o.default.createElement("p",null,"If you need to remove a query param, use ","null"," for that. For an example, let's say we need to remove bbc query param. This is how we do it:")),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  storybookAPI<span class="token punctuation">.</span><span class="token function">setQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />    bbc<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("h2",{id:"storybookapigetqueryparam","aria-level":2,title:"storybookAPI.getQueryParam()"},"storybookAPI.getQueryParam()"),o.default.createElement("p",null,"This method allows you to get a query param set by above API ","setQueryParams",". For example, let's say we need to get the bbc query param. Then this how we do it:"),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  storybookAPI<span class="token punctuation">.</span><span class="token function">getQueryParam</span><span class="token punctuation">(</span><span class="token string">\'bbc\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}),o.default.createElement("h2",{id:"storybookapionstoryfn","aria-level":2,title:"storybookAPI.onStory(fn)"},"storybookAPI.onStory(fn)"),o.default.createElement("p",null,"This method allows you to register a handler function which will be called whenever the user navigates between stories."),o.default.createElement(k.Code,{language:"js",filename:void 0,framework:void 0,html:'addonAPI<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">\'my-organisation/my-addon\'</span><span class="token punctuation">,</span> storybookAPI <span class="token operator">=></span> <span class="token punctuation">{</span><br />  storybookAPI<span class="token punctuation">.</span><span class="token function">onStory</span><span class="token punctuation">(</span><span class="token punctuation">(</span>kind<span class="token punctuation">,</span> story<span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kind<span class="token punctuation">,</span> story<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />'}));a.default=(0,p.generator)("RootExample",function(n){var a=n.path,s=n.query;return o.default.createElement(l.default,null,o.default.createElement(u.default,{path:a}),o.default.createElement(r.Content,{path:a,query:s},d))})}},[455]);
            return { page: comp.default }
          })
        